Program state 5
Stack:
	a=1;new(a,2);fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	
Output:
	
File Table:
	
Heap:
	

Program state 5
Stack:
	a=1;new(a,2);fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	
Output:
	
File Table:
	
Heap:
	
Program state 5
Stack:
	a=1
	new(a,2);fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	
Output:
	
File Table:
	
Heap:
	
Program state 5
Stack:
	a=1
	new(a,2);fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	
Output:
	
File Table:
	
Heap:
	
Program state 5
Stack:
	new(a,2);fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	
Program state 5
Stack:
	new(a,2);fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	
Program state 5
Stack:
	new(a,2)
	fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	
Program state 5
Stack:
	new(a,2)
	fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	
Program state 5
Stack:
	fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	fork( {b=3;print(a)} );a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	fork( {b=3;print(a)} )
	a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	fork( {b=3;print(a)} )
	a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 50
Stack:
	b=3;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	a=a+2;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 50
Stack:
	b=3;print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	a=a+2
	print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 50
Stack:
	b=3
	print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	a=a+2
	print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 50
Stack:
	b=3
	print(a)
	
Symbol Table:
	a->1
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	print(a)
	
Symbol Table:
	a->3
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 50
Stack:
	print(a)
	
Symbol Table:
	a->1
	b->3
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	print(a)
	
Symbol Table:
	a->3
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 50
Stack:
	print(a)
	
Symbol Table:
	a->1
	b->3
	
Output:
	
File Table:
	
Heap:
	1->2
	
Program state 5
Stack:
	
Symbol Table:
	a->3
	
Output:
	1   3   
File Table:
	
Heap:
	1->2
	
Program state 50
Stack:
	
Symbol Table:
	a->1
	b->3
	
Output:
	1   3   
File Table:
	
Heap:
	1->2
	
